!function(t){var r={};function n(e){if(r[e])return r[e].exports;var a=r[e]={i:e,l:!1,exports:{}};return t[e].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=t,n.c=r,n.d=function(t,r,e){n.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:e})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,r){if(1&r&&(t=n(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(n.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var a in t)n.d(e,a,function(r){return t[r]}.bind(null,a));return e},n.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(r,"a",r),r},n.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},n.p="",n(n.s=55)}({55:function(t,r){$(document).ready((function(){$.post("/bubblesData",(function(t){t.forEach((function(r,n,e){(!r.year||r.pageAmount<0)&&t.splice(n+0,1)})),t=t.sort((function(t,r){if(t.year&&r.year)return(t.year>r.year)-(t.year<r.year)}));var r=[];r[0]={year:t[0].year,pages:0,points:0},t.forEach((function(t){t.pageAmount<0&&(t.pageAmount=0);var n=r.length-1;r[n].year===t.year?(r[n].pages+=t.pageAmount,r[n].points+=t.points):r.push({year:t.year,pages:t.pageAmount,points:t.points})})),t,$buttonHost=$("#genPdfBtn").parent(),$buttonHost.append("<button class='btn line-btn' onclick='showOverlayWrapper()'>"+jsStrings.ministerial_points+"</button>"),function(t){var r=d3.select("#svg-port"),e=parseInt(r.style("width").replace("px",""))-96,a=parseInt(r.style("height").replace("px","")),o=.85*a,i=0,u=t.map((function(t){return i+=Math.sqrt(t.pages),Math.sqrt(t.points),t.year})),s=[];t.forEach((function(t){s.push(Math.sqrt(t.pages)/i*Math.min(e,o)*.8)}));var c=[];t.forEach((function(t){c.push(t.points)}));var l=[];s.forEach((function(t,r){l.push(0);for(var n=0;n<r;)l[l.length-1]+=2*s[n],n++;l[l.length-1]+=t}));var p=d3.scaleOrdinal().domain(u).range(l),f=d3.tip().attr("class","d3-tip").html((function(r,n){return jsStrings.vis.year[1]+": "+u[n]+"<br>"+jsStrings.vis.page.many+": "+t[n].pages}));r.call(f);var d=d3.tip().attr("class","d3-tip").html((function(r,n){return jsStrings.vis.year[1]+": "+u[n]+"<br>"+jsStrings.vis.ministerial_score+": "+t[n].points}));r.call(d);var y=[],h=[],m=[],g=[],v=[],b=[];u.forEach((function(t,r){v.push(u[r]),b.push(l[r]),r%2==0?(y.push(t),h.push(l[r])):(m.push(t),g.push(l[r]))}));var x=d3.axisTop(d3.scaleOrdinal().range(g).domain(m)).tickFormat((function(t,r){return g[r]-g[r-1]<12?"":t})),j=d3.axisBottom(d3.scaleOrdinal().range(h).domain(y)).tickFormat((function(t,r){return h[r]-h[r-1]<10?"":t})),O=d3.axisBottom(d3.scaleOrdinal().range(b).domain(v)).tickFormat((function(t,r){return b[r]-b[r-1]<10?"":t}));r.append("g").call(x).attr("transform","translate("+[20,20]+")"),r.append("g").call(j).attr("transform","translate("+[20,o-20]+")"),r.append("g").call(O).attr("transform","translate("+[20,a-20]+")"),r.append("g").selectAll("line").data(l).enter().append("line").attr("transform","translate("+[20,-10]+")").attr("id",(function(r,n){return"a"+t[n].year})).attr("x1",(function(t,r){return l[r]})).attr("y1",(function(){return o/2})).attr("x2",(function(t,r){return l[r]})).attr("y2",(function(t,r){return r%2==0?o:20})).attr("stroke","black").attr("stroke-dasharray","5, 5").attr("opacity","0.5");r.selectAll("rect").data(t).enter().append("circle").attr("transform","translate("+[20,-10]+")").attr("cx",(function(t){return p(t.year)})).attr("cy",(function(){return o/2})).attr("fill",(function(){return function(){n>=9&&(n=0);return d3.schemeSet2[n++]}()})).attr("r","0").on("mouseover",(function(t,r){f.show(t,r),d3.select("#a"+t.year).transition().duration(200).attr("stroke-width",3).attr("opacity",.7)})).on("mouseout",(function(t,r){f.hide(t,r),d3.select("#a"+t.year).transition().duration(200).attr("stroke-width",1).attr("opacity",.5)})).transition().duration(500).attr("r",(function(t,r){return s[r]}));var k=d3.scaleLinear().domain([Math.max(...c),Math.min(...c)]).range([o+(a-o)/2,a-10]),S=r.selectAll("rect").data(t);S.enter().append("line").attr("transform","translate("+[20,-10]+")").attr("x1",(function(t){return p(t.year)})).attr("y1",(function(t){return k(t.points)})).attr("x2",(function(r,n){return n<t.length-1?p(t[n+1].year):p(t[n].year)})).attr("y2",(function(r,n){return n<t.length-1?k(c[n+1]):k(c[n])})).attr("stroke-width","1px").attr("stroke","#525690"),S.enter().append("circle").attr("transform","translate("+[20,-10]+")").attr("cx",(function(t){return p(t.year)})).attr("cy",(function(t){return k(t.points)})).attr("fill",(function(){return"#2627d7"})).attr("r","0").on("mouseover",(function(t,r){d.show(t,r)})).on("mouseout",(function(t,r){d.hide(t,r)})).transition().duration(500).attr("r",(function(t,r){return 4}))}(r)}))}));var n=0}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,