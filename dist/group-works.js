!function(t){var r={};function e(n){if(r[n])return r[n].exports;var a=r[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}e.m=t,e.c=r,e.d=function(t,r,n){e.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,r){if(1&r&&(t=e(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var a in t)e.d(n,a,function(r){return t[r]}.bind(null,a));return n},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,"a",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p="",e(e.s=60)}({60:function(t,r){function e(t,r){var e={works:0,articles:0,books:0,edits:0,year:t,titles:[]};return r.forEach((function(r){r.year===t&&(e.works++,"book"===r.publicationType&&e.books++,"edit"===r.publicationType&&(e.edits++,e.titles.push(r.title)),"article"===r.publicationType&&e.articles++)})),e}$(document).ready((function(){$.post("worksData",(function(t){var r=function(t){(t=t.map((function(t){return Number.parseInt(t.year)<1900?t.year=Number.parseInt(t.year)- -1e3:t.year=Number.parseInt(t.year),t}))).sort(function(t){var r=1;"-"===t[0]&&(r=-1,t=t.substr(1));return function(e,n){return(e[t]<n[t]?-1:e[t]>n[t]?1:0)*r}}("year"));for(var r=[],n=0;n<t[t.length-1].year-t[0].year- -1;n++)r.push(e(t[0].year- -n,t));return r}(t);!function(t){var r=d3.select("#svg-port"),e=$(".svg-port").width(),n=$(".svg-port").height();r.selectAll("*").remove();var a=d3.tip().attr("class","d3-tip").html((function(t){return jsStrings.vis.year[1]+" "+t.year+": "+t.works+" "+multiple(jsStrings.vis.work,t.works)+".</br> "+jsStrings.vis.including+" "+t.books+" "+jsStrings.vis.monographies+"."}));r.call(a);var o=n/2,i=e,s=d3.scaleBand().domain(t.map((function(t){return t.year}))).range([0,i-30]).paddingInner(.1).paddingOuter(.2),u=d3.scaleLinear().domain([0,d3.max(t,(function(t){return t.works}))]).range([0,o]);d3.scaleSequential(d3.interpolateCool).domain([d3.min(t,(function(t){return t.year})),d3.max(t,(function(t){return t.year}))]);r.select("g").empty()&&r.append("g").attr("id","bars");var l=r.select("g").selectAll("rect").data(t);l.enter().append("rect").attr("width",s.bandwidth()).attr("x",(function(t){return s(t.year)})).attr("y",o).attr("height",0).style("fill","#FFFFFF").attr("transform","translate( "+[30,o-20]+")").on("mouseover",a.show).on("mouseout",a.hide).transition().duration(1e3).attr("y",(function(t){return o-u(t.articles)})).attr("height",(function(t){return u(t.articles)})).style("fill","#8BC34A"),l.enter().append("rect").attr("width",s.bandwidth()).attr("x",(function(t){return s(t.year)})).attr("y",(function(t){return t.articles>0?o-u(t.works)-10:o-u(t.works)})).attr("height",0).style("fill","#f44336").attr("transform","translate( "+[30,o-20]+")").on("mouseover",a.show).on("mouseout",a.hide).transition().duration(1e3).attr("y",(function(t){return t.articles>0?o-u(t.works-t.edits)-10:o-u(t.works)})).attr("height",(function(t){return u(t.books)})),l.enter().append("rect").attr("width",s.bandwidth()).attr("x",(function(t){return s(t.year)})).attr("y",(function(t){return t.articles>0||t.books>0?o-u(t.works)-10:o-u(t.works)})).attr("height",0).style("fill","yellow").attr("transform","translate( "+[30,o-20]+")").on("mouseover",a.show).on("mouseout",a.hide).transition().duration(1e3).attr("y",(function(t){return t.articles>0&&t.books>0?o-u(t.works)-20:t.articles>0||t.books>0?o-u(t.works)-10:o-u(t.edits)})).attr("height",(function(t){return u(t.edits)})),l.exit().transition().duration(300).attr("width",0).remove();var c=d3.axisBottom(s);r.append("g").attr("id","x-axis").call(c).attr("transform","translate( "+[-e,n/2]+")").transition().duration(1e3).attr("transform","translate( "+[30,n-20]+")");var d=d3.axisLeft(u.domain(u.domain().reverse()));r.append("g").attr("id","y-axis").call(d).attr("transform","translate( "+[0,2*n]+")").transition().duration(1e3).attr("transform","translate( "+[30,n-o-20]+")")}(r),function(t){var r={meanPerYear:0,sumOfWorks:0,sumOfArticles:0};t.forEach((function(t,e){r.sumOfWorks+=Number.parseInt(t.works),r.sumOfArticles+=Number.parseInt(t.articles)})),r.meanPerYear=r.sumOfWorks/t.length,$("#mean-works-amount-display").text(r.meanPerYear.toFixed(2)),$("#publications-amount-display").text(r.sumOfArticles),$("#works-amount-display").text(r.sumOfWorks)}(r)}))}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,